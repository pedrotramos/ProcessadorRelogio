|processador
clk => fluxodados:FD.clk
clk => unidade_controle:UC.clk
dataIn[0] => fluxodados:FD.dataIN[0]
dataIn[1] => fluxodados:FD.dataIN[1]
dataIn[2] => fluxodados:FD.dataIN[2]
dataIn[3] => fluxodados:FD.dataIN[3]
dataIn[4] => fluxodados:FD.dataIN[4]
dataIn[5] => fluxodados:FD.dataIN[5]
dataIn[6] => fluxodados:FD.dataIN[6]
dataIn[7] => fluxodados:FD.dataIN[7]
dadoHex[0] <= fluxodados:FD.dataOUT[0]
dadoHex[1] <= fluxodados:FD.dataOUT[1]
dadoHex[2] <= fluxodados:FD.dataOUT[2]
dadoHex[3] <= fluxodados:FD.dataOUT[3]
load <= unidade_controle:UC.palavraControle[1]
store <= unidade_controle:UC.palavraControle[0]
outToDecode[0] <= fluxodados:FD.toDecode[0]
outToDecode[1] <= fluxodados:FD.toDecode[1]
outToDecode[2] <= fluxodados:FD.toDecode[2]
outToDecode[3] <= fluxodados:FD.toDecode[3]
outToDecode[4] <= fluxodados:FD.toDecode[4]
outToDecode[5] <= fluxodados:FD.toDecode[5]
outToDecode[6] <= fluxodados:FD.toDecode[6]
outToDecode[7] <= fluxodados:FD.toDecode[7]


|processador|fluxoDados:FD
clk => registradorgenerico:PC.CLK
clk => flipflop:FlipFlop.clock
clk => bancoregistradoresarqregreg:BancoRegistradores.clk
dataIN[0] => muxgenerico2x1:muxIO_Imediato.entradaA_MUX[0]
dataIN[1] => muxgenerico2x1:muxIO_Imediato.entradaA_MUX[1]
dataIN[2] => muxgenerico2x1:muxIO_Imediato.entradaA_MUX[2]
dataIN[3] => muxgenerico2x1:muxIO_Imediato.entradaA_MUX[3]
dataIN[4] => muxgenerico2x1:muxIO_Imediato.entradaA_MUX[4]
dataIN[5] => muxgenerico2x1:muxIO_Imediato.entradaA_MUX[5]
dataIN[6] => muxgenerico2x1:muxIO_Imediato.entradaA_MUX[6]
dataIN[7] => muxgenerico2x1:muxIO_Imediato.entradaA_MUX[7]
palavraControle[0] => ~NO_FANOUT~
palavraControle[1] => ula:ULA.seletor[0]
palavraControle[2] => ula:ULA.seletor[1]
palavraControle[3] => ula:ULA.seletor[2]
palavraControle[4] => bancoregistradoresarqregreg:BancoRegistradores.escreveB
palavraControle[5] => muxgenerico2x1:muxIO_Imediato.seletor_MUX
palavraControle[6] => selMuxProxPC_FlagZero.IN1
palavraControle[7] => selMuxProxPC_FlagZero.IN1
opCode[0] <= memoriarom:ROM.Dado[18]
opCode[1] <= memoriarom:ROM.Dado[19]
opCode[2] <= memoriarom:ROM.Dado[20]
toDecode[0] <= memoriarom:ROM.Dado[0]
toDecode[1] <= memoriarom:ROM.Dado[1]
toDecode[2] <= memoriarom:ROM.Dado[2]
toDecode[3] <= memoriarom:ROM.Dado[3]
toDecode[4] <= memoriarom:ROM.Dado[4]
toDecode[5] <= memoriarom:ROM.Dado[5]
toDecode[6] <= memoriarom:ROM.Dado[6]
toDecode[7] <= memoriarom:ROM.Dado[7]
dataOUT[0] <= bancoregistradoresarqregreg:BancoRegistradores.saida[0]
dataOUT[1] <= bancoregistradoresarqregreg:BancoRegistradores.saida[1]
dataOUT[2] <= bancoregistradoresarqregreg:BancoRegistradores.saida[2]
dataOUT[3] <= bancoregistradoresarqregreg:BancoRegistradores.saida[3]
dataOUT[4] <= bancoregistradoresarqregreg:BancoRegistradores.saida[4]
dataOUT[5] <= bancoregistradoresarqregreg:BancoRegistradores.saida[5]
dataOUT[6] <= bancoregistradoresarqregreg:BancoRegistradores.saida[6]
dataOUT[7] <= bancoregistradoresarqregreg:BancoRegistradores.saida[7]


|processador|fluxoDados:FD|registradorGenerico:PC
DIN[0] => DOUT[0]~reg0.DATAIN
DIN[1] => DOUT[1]~reg0.DATAIN
DIN[2] => DOUT[2]~reg0.DATAIN
DIN[3] => DOUT[3]~reg0.DATAIN
DIN[4] => DOUT[4]~reg0.DATAIN
DIN[5] => DOUT[5]~reg0.DATAIN
DIN[6] => DOUT[6]~reg0.DATAIN
DIN[7] => DOUT[7]~reg0.DATAIN
DIN[8] => DOUT[8]~reg0.DATAIN
DIN[9] => DOUT[9]~reg0.DATAIN
DOUT[0] <= DOUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[4] <= DOUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[5] <= DOUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[6] <= DOUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[7] <= DOUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[8] <= DOUT[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DOUT[9] <= DOUT[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ENABLE => DOUT[9]~reg0.ENA
ENABLE => DOUT[8]~reg0.ENA
ENABLE => DOUT[7]~reg0.ENA
ENABLE => DOUT[6]~reg0.ENA
ENABLE => DOUT[5]~reg0.ENA
ENABLE => DOUT[4]~reg0.ENA
ENABLE => DOUT[3]~reg0.ENA
ENABLE => DOUT[2]~reg0.ENA
ENABLE => DOUT[1]~reg0.ENA
ENABLE => DOUT[0]~reg0.ENA
CLK => DOUT[0]~reg0.CLK
CLK => DOUT[1]~reg0.CLK
CLK => DOUT[2]~reg0.CLK
CLK => DOUT[3]~reg0.CLK
CLK => DOUT[4]~reg0.CLK
CLK => DOUT[5]~reg0.CLK
CLK => DOUT[6]~reg0.CLK
CLK => DOUT[7]~reg0.CLK
CLK => DOUT[8]~reg0.CLK
CLK => DOUT[9]~reg0.CLK
RST => DOUT[0]~reg0.ACLR
RST => DOUT[1]~reg0.ACLR
RST => DOUT[2]~reg0.ACLR
RST => DOUT[3]~reg0.ACLR
RST => DOUT[4]~reg0.ACLR
RST => DOUT[5]~reg0.ACLR
RST => DOUT[6]~reg0.ACLR
RST => DOUT[7]~reg0.ACLR
RST => DOUT[8]~reg0.ACLR
RST => DOUT[9]~reg0.ACLR


|processador|fluxoDados:FD|muxGenerico2x1:MuxProxPC
entradaA_MUX[0] => saida_MUX.DATAA
entradaA_MUX[1] => saida_MUX.DATAA
entradaA_MUX[2] => saida_MUX.DATAA
entradaA_MUX[3] => saida_MUX.DATAA
entradaA_MUX[4] => saida_MUX.DATAA
entradaA_MUX[5] => saida_MUX.DATAA
entradaA_MUX[6] => saida_MUX.DATAA
entradaA_MUX[7] => saida_MUX.DATAA
entradaA_MUX[8] => saida_MUX.DATAA
entradaA_MUX[9] => saida_MUX.DATAA
entradaB_MUX[0] => saida_MUX.DATAB
entradaB_MUX[1] => saida_MUX.DATAB
entradaB_MUX[2] => saida_MUX.DATAB
entradaB_MUX[3] => saida_MUX.DATAB
entradaB_MUX[4] => saida_MUX.DATAB
entradaB_MUX[5] => saida_MUX.DATAB
entradaB_MUX[6] => saida_MUX.DATAB
entradaB_MUX[7] => saida_MUX.DATAB
entradaB_MUX[8] => saida_MUX.DATAB
entradaB_MUX[9] => saida_MUX.DATAB
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
saida_MUX[0] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[1] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[2] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[3] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[4] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[5] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[6] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[7] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[8] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[9] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE


|processador|fluxoDados:FD|somaConstante:somaUm
entrada[0] => Add0.IN20
entrada[1] => Add0.IN19
entrada[2] => Add0.IN18
entrada[3] => Add0.IN17
entrada[4] => Add0.IN16
entrada[5] => Add0.IN15
entrada[6] => Add0.IN14
entrada[7] => Add0.IN13
entrada[8] => Add0.IN12
entrada[9] => Add0.IN11
saida[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[8] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
saida[9] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|processador|fluxoDados:FD|memoriaROM:ROM
Endereco[0] => memROM.RADDR
Endereco[1] => memROM.RADDR1
Endereco[2] => memROM.RADDR2
Endereco[3] => memROM.RADDR3
Endereco[4] => memROM.RADDR4
Endereco[5] => memROM.RADDR5
Endereco[6] => memROM.RADDR6
Endereco[7] => memROM.RADDR7
Endereco[8] => memROM.RADDR8
Endereco[9] => memROM.RADDR9
Dado[0] <= memROM.DATAOUT
Dado[1] <= memROM.DATAOUT1
Dado[2] <= memROM.DATAOUT2
Dado[3] <= memROM.DATAOUT3
Dado[4] <= memROM.DATAOUT4
Dado[5] <= memROM.DATAOUT5
Dado[6] <= memROM.DATAOUT6
Dado[7] <= memROM.DATAOUT7
Dado[8] <= memROM.DATAOUT8
Dado[9] <= memROM.DATAOUT9
Dado[10] <= memROM.DATAOUT10
Dado[11] <= memROM.DATAOUT11
Dado[12] <= memROM.DATAOUT12
Dado[13] <= memROM.DATAOUT13
Dado[14] <= memROM.DATAOUT14
Dado[15] <= memROM.DATAOUT15
Dado[16] <= memROM.DATAOUT16
Dado[17] <= memROM.DATAOUT17
Dado[18] <= memROM.DATAOUT18
Dado[19] <= memROM.DATAOUT19
Dado[20] <= memROM.DATAOUT20


|processador|fluxoDados:FD|muxGenerico2x1:muxIO_Imediato
entradaA_MUX[0] => saida_MUX.DATAA
entradaA_MUX[1] => saida_MUX.DATAA
entradaA_MUX[2] => saida_MUX.DATAA
entradaA_MUX[3] => saida_MUX.DATAA
entradaA_MUX[4] => saida_MUX.DATAA
entradaA_MUX[5] => saida_MUX.DATAA
entradaA_MUX[6] => saida_MUX.DATAA
entradaA_MUX[7] => saida_MUX.DATAA
entradaB_MUX[0] => saida_MUX.DATAB
entradaB_MUX[1] => saida_MUX.DATAB
entradaB_MUX[2] => saida_MUX.DATAB
entradaB_MUX[3] => saida_MUX.DATAB
entradaB_MUX[4] => saida_MUX.DATAB
entradaB_MUX[5] => saida_MUX.DATAB
entradaB_MUX[6] => saida_MUX.DATAB
entradaB_MUX[7] => saida_MUX.DATAB
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
seletor_MUX => saida_MUX.OUTPUTSELECT
saida_MUX[0] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[1] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[2] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[3] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[4] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[5] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[6] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE
saida_MUX[7] <= saida_MUX.DB_MAX_OUTPUT_PORT_TYPE


|processador|fluxoDados:FD|ULA:ULA
entradaA[0] => Add0.IN8
entradaA[0] => Add1.IN16
entradaA[0] => op_and[0].IN0
entradaA[0] => op_or[0].IN0
entradaA[0] => op_xor[0].IN0
entradaA[0] => saida.DATAA
entradaA[0] => saida.DATAB
entradaA[0] => saida.DATAB
entradaA[1] => Add0.IN7
entradaA[1] => Add1.IN15
entradaA[1] => op_and[1].IN0
entradaA[1] => op_or[1].IN0
entradaA[1] => op_xor[1].IN0
entradaA[1] => saida.DATAA
entradaA[1] => saida.DATAB
entradaA[1] => saida.DATAB
entradaA[2] => Add0.IN6
entradaA[2] => Add1.IN14
entradaA[2] => op_and[2].IN0
entradaA[2] => op_or[2].IN0
entradaA[2] => op_xor[2].IN0
entradaA[2] => saida.DATAA
entradaA[2] => saida.DATAB
entradaA[2] => saida.DATAB
entradaA[3] => Add0.IN5
entradaA[3] => Add1.IN13
entradaA[3] => op_and[3].IN0
entradaA[3] => op_or[3].IN0
entradaA[3] => op_xor[3].IN0
entradaA[3] => saida.DATAA
entradaA[3] => saida.DATAB
entradaA[3] => saida.DATAB
entradaA[4] => Add0.IN4
entradaA[4] => Add1.IN12
entradaA[4] => op_and[4].IN0
entradaA[4] => op_or[4].IN0
entradaA[4] => op_xor[4].IN0
entradaA[4] => saida.DATAA
entradaA[4] => saida.DATAB
entradaA[4] => saida.DATAB
entradaA[5] => Add0.IN3
entradaA[5] => Add1.IN11
entradaA[5] => op_and[5].IN0
entradaA[5] => op_or[5].IN0
entradaA[5] => op_xor[5].IN0
entradaA[5] => saida.DATAA
entradaA[5] => saida.DATAB
entradaA[5] => saida.DATAB
entradaA[6] => Add0.IN2
entradaA[6] => Add1.IN10
entradaA[6] => op_and[6].IN0
entradaA[6] => op_or[6].IN0
entradaA[6] => op_xor[6].IN0
entradaA[6] => saida.DATAA
entradaA[6] => saida.DATAB
entradaA[6] => saida.DATAB
entradaA[7] => Add0.IN1
entradaA[7] => Add1.IN9
entradaA[7] => op_and[7].IN0
entradaA[7] => op_or[7].IN0
entradaA[7] => op_xor[7].IN0
entradaA[7] => saida.DATAA
entradaA[7] => saida.DATAB
entradaA[7] => saida.DATAB
entradaB[0] => Add0.IN16
entradaB[0] => op_and[0].IN1
entradaB[0] => op_or[0].IN1
entradaB[0] => op_xor[0].IN1
entradaB[0] => saida.DATAB
entradaB[0] => Add1.IN8
entradaB[1] => Add0.IN15
entradaB[1] => op_and[1].IN1
entradaB[1] => op_or[1].IN1
entradaB[1] => op_xor[1].IN1
entradaB[1] => saida.DATAB
entradaB[1] => Add1.IN7
entradaB[2] => Add0.IN14
entradaB[2] => op_and[2].IN1
entradaB[2] => op_or[2].IN1
entradaB[2] => op_xor[2].IN1
entradaB[2] => saida.DATAB
entradaB[2] => Add1.IN6
entradaB[3] => Add0.IN13
entradaB[3] => op_and[3].IN1
entradaB[3] => op_or[3].IN1
entradaB[3] => op_xor[3].IN1
entradaB[3] => saida.DATAB
entradaB[3] => Add1.IN5
entradaB[4] => Add0.IN12
entradaB[4] => op_and[4].IN1
entradaB[4] => op_or[4].IN1
entradaB[4] => op_xor[4].IN1
entradaB[4] => saida.DATAB
entradaB[4] => Add1.IN4
entradaB[5] => Add0.IN11
entradaB[5] => op_and[5].IN1
entradaB[5] => op_or[5].IN1
entradaB[5] => op_xor[5].IN1
entradaB[5] => saida.DATAB
entradaB[5] => Add1.IN3
entradaB[6] => Add0.IN10
entradaB[6] => op_and[6].IN1
entradaB[6] => op_or[6].IN1
entradaB[6] => op_xor[6].IN1
entradaB[6] => saida.DATAB
entradaB[6] => Add1.IN2
entradaB[7] => Add0.IN9
entradaB[7] => op_and[7].IN1
entradaB[7] => op_or[7].IN1
entradaB[7] => op_xor[7].IN1
entradaB[7] => saida.DATAB
entradaB[7] => Add1.IN1
seletor[0] => Equal0.IN2
seletor[0] => Equal1.IN0
seletor[0] => Equal2.IN2
seletor[0] => Equal3.IN1
seletor[0] => Equal4.IN2
seletor[0] => Equal5.IN1
seletor[0] => Equal6.IN2
seletor[0] => Equal7.IN2
seletor[1] => Equal0.IN1
seletor[1] => Equal1.IN2
seletor[1] => Equal2.IN0
seletor[1] => Equal3.IN0
seletor[1] => Equal4.IN1
seletor[1] => Equal5.IN2
seletor[1] => Equal6.IN1
seletor[1] => Equal7.IN1
seletor[2] => Equal0.IN0
seletor[2] => Equal1.IN1
seletor[2] => Equal2.IN1
seletor[2] => Equal3.IN2
seletor[2] => Equal4.IN0
seletor[2] => Equal5.IN0
seletor[2] => Equal6.IN0
seletor[2] => Equal7.IN0
saida[0] <= saida.DB_MAX_OUTPUT_PORT_TYPE
saida[1] <= saida.DB_MAX_OUTPUT_PORT_TYPE
saida[2] <= saida.DB_MAX_OUTPUT_PORT_TYPE
saida[3] <= saida.DB_MAX_OUTPUT_PORT_TYPE
saida[4] <= saida.DB_MAX_OUTPUT_PORT_TYPE
saida[5] <= saida.DB_MAX_OUTPUT_PORT_TYPE
saida[6] <= saida.DB_MAX_OUTPUT_PORT_TYPE
saida[7] <= saida.DB_MAX_OUTPUT_PORT_TYPE
flagZero <= Equal8.DB_MAX_OUTPUT_PORT_TYPE


|processador|fluxoDados:FD|flipFlop:FlipFlop
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|processador|fluxoDados:FD|bancoRegistradoresArqRegReg:BancoRegistradores
clk => registrador~12.CLK
clk => registrador~0.CLK
clk => registrador~1.CLK
clk => registrador~2.CLK
clk => registrador~3.CLK
clk => registrador~4.CLK
clk => registrador~5.CLK
clk => registrador~6.CLK
clk => registrador~7.CLK
clk => registrador~8.CLK
clk => registrador~9.CLK
clk => registrador~10.CLK
clk => registrador~11.CLK
clk => registrador.CLK0
enderecoA[0] => registrador.RADDR
enderecoA[1] => registrador.RADDR1
enderecoA[2] => registrador.RADDR2
enderecoA[3] => registrador.RADDR3
enderecoB[0] => registrador~3.DATAIN
enderecoB[0] => registrador.WADDR
enderecoB[1] => registrador~2.DATAIN
enderecoB[1] => registrador.WADDR1
enderecoB[2] => registrador~1.DATAIN
enderecoB[2] => registrador.WADDR2
enderecoB[3] => registrador~0.DATAIN
enderecoB[3] => registrador.WADDR3
dadoEscritaB[0] => registrador~11.DATAIN
dadoEscritaB[0] => registrador.DATAIN
dadoEscritaB[1] => registrador~10.DATAIN
dadoEscritaB[1] => registrador.DATAIN1
dadoEscritaB[2] => registrador~9.DATAIN
dadoEscritaB[2] => registrador.DATAIN2
dadoEscritaB[3] => registrador~8.DATAIN
dadoEscritaB[3] => registrador.DATAIN3
dadoEscritaB[4] => registrador~7.DATAIN
dadoEscritaB[4] => registrador.DATAIN4
dadoEscritaB[5] => registrador~6.DATAIN
dadoEscritaB[5] => registrador.DATAIN5
dadoEscritaB[6] => registrador~5.DATAIN
dadoEscritaB[6] => registrador.DATAIN6
dadoEscritaB[7] => registrador~4.DATAIN
dadoEscritaB[7] => registrador.DATAIN7
escreveB => registrador~12.DATAIN
escreveB => registrador.WE
saida[0] <= registrador.DATAOUT
saida[1] <= registrador.DATAOUT1
saida[2] <= registrador.DATAOUT2
saida[3] <= registrador.DATAOUT3
saida[4] <= registrador.DATAOUT4
saida[5] <= registrador.DATAOUT5
saida[6] <= registrador.DATAOUT6
saida[7] <= registrador.DATAOUT7


|processador|Unidade_Controle:UC
clk => ~NO_FANOUT~
opCode[0] => Mux0.IN10
opCode[0] => Mux1.IN10
opCode[0] => Mux2.IN10
opCode[0] => Mux3.IN10
opCode[0] => Mux4.IN10
opCode[0] => Mux5.IN10
opCode[0] => Mux6.IN10
opCode[0] => Mux7.IN10
opCode[0] => Mux8.IN10
opCode[0] => Mux9.IN10
opCode[1] => Mux0.IN9
opCode[1] => Mux1.IN9
opCode[1] => Mux2.IN9
opCode[1] => Mux3.IN9
opCode[1] => Mux4.IN9
opCode[1] => Mux5.IN9
opCode[1] => Mux6.IN9
opCode[1] => Mux7.IN9
opCode[1] => Mux8.IN9
opCode[1] => Mux9.IN9
opCode[2] => Mux0.IN8
opCode[2] => Mux1.IN8
opCode[2] => Mux2.IN8
opCode[2] => Mux3.IN8
opCode[2] => Mux4.IN8
opCode[2] => Mux5.IN8
opCode[2] => Mux6.IN8
opCode[2] => Mux7.IN8
opCode[2] => Mux8.IN8
opCode[2] => Mux9.IN8
palavraControle[0] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
palavraControle[1] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
palavraControle[2] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
palavraControle[3] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
palavraControle[4] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
palavraControle[5] <= <GND>
palavraControle[6] <= habEscritaBancoReg.DB_MAX_OUTPUT_PORT_TYPE
palavraControle[7] <= selMuxIOImed.DB_MAX_OUTPUT_PORT_TYPE
palavraControle[8] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
palavraControle[9] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


